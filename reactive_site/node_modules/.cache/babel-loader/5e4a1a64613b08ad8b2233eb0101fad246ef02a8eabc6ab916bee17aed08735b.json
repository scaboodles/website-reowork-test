{"ast":null,"code":"export function getNumFromPx(numPx) {\n  if (typeof numPx == \"string\") {\n    const stripped = numPx.replace(\"px\", '');\n    return parseInt(stripped, 10);\n  }\n  console.log(\"input not a string for get num from px\");\n  return numPx;\n}\nexport function getOffset(el) {\n  const rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  };\n}\nexport function sortedKeysByVal(dict) {\n  let items = Object.keys(dict).map(key => {\n    return [key, dict[key]];\n  });\n  items.sort((first, second) => {\n    return first[1] = second[1];\n  });\n  let keys = items.map(e => {\n    return e[0];\n  });\n  return keys;\n}\nexport function findKeyOfmax(dict) {\n  let maxKey,\n    maxValue = 0;\n  for (const [key, value] of Object.entries(dict)) {\n    if (value > maxValue) {\n      maxValue = value;\n      maxKey = key;\n    }\n  }\n  return maxKey;\n}","map":{"version":3,"names":["getNumFromPx","numPx","stripped","replace","parseInt","console","log","getOffset","el","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","sortedKeysByVal","dict","items","Object","keys","map","key","sort","first","second","e","findKeyOfmax","maxKey","maxValue","value","entries"],"sources":["/Users/owen/dev/sitemk2test/reactive_site/src/helpers.js"],"sourcesContent":["export function getNumFromPx(numPx){\n    if(typeof numPx == \"string\"){\n      const stripped = numPx.replace(\"px\", '');\n      return parseInt(stripped, 10);\n    }\n    console.log(\"input not a string for get num from px\");\n    return numPx;\n}\n\nexport function getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n}\n\n\nexport function sortedKeysByVal(dict){\n    let items =Object.keys(dict).map(\n        (key) => {return [key, dict[key]] });\n    items.sort(\n        (first, second) => { return first[1] = second[1]}\n    );\n    let keys = items.map(\n        (e) => { return e[0]}\n    );\n    return keys\n}\n\n\nexport function findKeyOfmax(dict){\n    let maxKey, maxValue = 0;\n    for(const [key, value] of Object.entries(dict)) {\n      if(value > maxValue) {\n        maxValue = value;\n        maxKey = key;\n      }\n    }\n    return maxKey;\n}"],"mappings":"AAAA,OAAO,SAASA,YAAY,CAACC,KAAK,EAAC;EAC/B,IAAG,OAAOA,KAAK,IAAI,QAAQ,EAAC;IAC1B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IACxC,OAAOC,QAAQ,CAACF,QAAQ,EAAE,EAAE,CAAC;EAC/B;EACAG,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACrD,OAAOL,KAAK;AAChB;AAEA,OAAO,SAASM,SAAS,CAACC,EAAE,EAAE;EAC1B,MAAMC,IAAI,GAAGD,EAAE,CAACE,qBAAqB,EAAE;EACvC,OAAO;IACLC,IAAI,EAAEF,IAAI,CAACE,IAAI,GAAGC,MAAM,CAACC,OAAO;IAChCC,GAAG,EAAEL,IAAI,CAACK,GAAG,GAAGF,MAAM,CAACG;EACzB,CAAC;AACL;AAGA,OAAO,SAASC,eAAe,CAACC,IAAI,EAAC;EACjC,IAAIC,KAAK,GAAEC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAC3BC,GAAG,IAAK;IAAC,OAAO,CAACA,GAAG,EAAEL,IAAI,CAACK,GAAG,CAAC,CAAC;EAAC,CAAC,CAAC;EACxCJ,KAAK,CAACK,IAAI,CACN,CAACC,KAAK,EAAEC,MAAM,KAAK;IAAE,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;EAAA,CAAC,CACpD;EACD,IAAIL,IAAI,GAAGF,KAAK,CAACG,GAAG,CACfK,CAAC,IAAK;IAAE,OAAOA,CAAC,CAAC,CAAC,CAAC;EAAA,CAAC,CACxB;EACD,OAAON,IAAI;AACf;AAGA,OAAO,SAASO,YAAY,CAACV,IAAI,EAAC;EAC9B,IAAIW,MAAM;IAAEC,QAAQ,GAAG,CAAC;EACxB,KAAI,MAAM,CAACP,GAAG,EAAEQ,KAAK,CAAC,IAAIX,MAAM,CAACY,OAAO,CAACd,IAAI,CAAC,EAAE;IAC9C,IAAGa,KAAK,GAAGD,QAAQ,EAAE;MACnBA,QAAQ,GAAGC,KAAK;MAChBF,MAAM,GAAGN,GAAG;IACd;EACF;EACA,OAAOM,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}