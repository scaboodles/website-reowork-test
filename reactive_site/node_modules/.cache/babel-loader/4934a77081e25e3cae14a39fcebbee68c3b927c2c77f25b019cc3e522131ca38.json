{"ast":null,"code":"export function clickAndDrag(element) {\n  dragElement(element);\n}\nfunction dragElement(elmnt) {\n  var x1 = 0,\n    x2 = 0,\n    y1 = 0,\n    y2 = 0;\n  if (document.getElementById(elmnt.id + \"Head\")) {\n    // if present, the header is where you move the DIV from:\n    document.getElementById(elmnt.id + \"Head\").onmousedown = dragMouseDown;\n  } else {\n    //error can happen if element is missing a head or an id\n    if (elmnt.id) {\n      console.log(\"missing head for \" + elmnt.id);\n    } else {\n      console.log(\"anonymous click and drag\");\n    }\n    elmnt.onmousedown = dragMouseDown;\n  }\n  function dragMouseDown(e) {\n    e = e || window.event; //if e is unassigned, it is assigned to window.event\n    e.preventDefault(); //only execute specifically handled events\n\n    // get the mouse cursor position at startup:\n    x2 = e.clientX;\n    y2 = e.clientY;\n    document.onmouseup = closeDragElement; //stop dragging on mouse up\n    document.onmousemove = elementDrag; // call a function whenever the cursor moves:\n\n    //set cursor image:\n    elmnt.style.cursor = \"url(./resources/pointer-move.png), move\";\n  }\n  function elementDrag(e) {\n    e = e || window.event; //if e is unassigned, it is assigned to window.event\n    e.preventDefault();\n\n    //recalculate cursor position\n\n    x1 = x2 - e.clientX;\n    y1 = y2 - e.clientY;\n    x2 = e.clientX;\n    y2 = e.clientY;\n\n    // set the element's new position:\n    elmnt.style.top = elmnt.offsetTop - y1 + \"px\";\n    elmnt.style.left = elmnt.offsetLeft - x1 + \"px\";\n  }\n  function closeDragElement() {\n    // stop moving when mouse button is released by removing document mouse events\n    document.onmouseup = null;\n    document.onmousemove = null;\n\n    //reset cursor:\n    elmnt.style.cursor = \"url(./resources/pointer-clickable.png), auto\";\n  }\n}","map":{"version":3,"names":["clickAndDrag","element","dragElement","elmnt","x1","x2","y1","y2","document","getElementById","id","onmousedown","dragMouseDown","console","log","e","window","event","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","cursor","top","offsetTop","left","offsetLeft"],"sources":["/Users/owen/dev/sitemk2test/reactive_site/src/draggableDiv.js"],"sourcesContent":["export function clickAndDrag(element){\n    dragElement(element);\n}\n\nfunction dragElement(elmnt){\n    var x1 = 0, x2 = 0, y1 = 0, y2 = 0;\n\n    if (document.getElementById(elmnt.id + \"Head\")) {\n        // if present, the header is where you move the DIV from:\n        document.getElementById(elmnt.id + \"Head\").onmousedown = dragMouseDown;\n    } else {\n        //error can happen if element is missing a head or an id\n        if(elmnt.id){\n            console.log(\"missing head for \" + elmnt.id);\n        }else{\n            console.log(\"anonymous click and drag\");\n        }\n        elmnt.onmousedown = dragMouseDown;\n    }\n\n    function dragMouseDown(e){\n        e = e || window.event; //if e is unassigned, it is assigned to window.event\n        e.preventDefault(); //only execute specifically handled events\n\n        // get the mouse cursor position at startup:\n        x2 = e.clientX;\n        y2 = e.clientY;\n\n        document.onmouseup = closeDragElement; //stop dragging on mouse up\n        document.onmousemove = elementDrag; // call a function whenever the cursor moves:\n\n        //set cursor image:\n        elmnt.style.cursor = \"url(./resources/pointer-move.png), move\";  \n    }\n\n    function elementDrag(e){\n        e = e || window.event; //if e is unassigned, it is assigned to window.event\n        e.preventDefault();\n\n        //recalculate cursor position\n\n        x1 = x2 - e.clientX;\n        y1 = y2 - e.clientY;\n\n        x2 = e.clientX;\n        y2 = e.clientY;\n\n        // set the element's new position:\n        elmnt.style.top = (elmnt.offsetTop - y1) + \"px\";\n        elmnt.style.left = (elmnt.offsetLeft - x1) + \"px\";\n\n    }\n\n    function closeDragElement() {\n        // stop moving when mouse button is released by removing document mouse events\n        document.onmouseup = null;\n        document.onmousemove = null;\n\n        //reset cursor:\n        elmnt.style.cursor = \"url(./resources/pointer-clickable.png), auto\";  \n    }\n}"],"mappings":"AAAA,OAAO,SAASA,YAAY,CAACC,OAAO,EAAC;EACjCC,WAAW,CAACD,OAAO,CAAC;AACxB;AAEA,SAASC,WAAW,CAACC,KAAK,EAAC;EACvB,IAAIC,EAAE,GAAG,CAAC;IAAEC,EAAE,GAAG,CAAC;IAAEC,EAAE,GAAG,CAAC;IAAEC,EAAE,GAAG,CAAC;EAElC,IAAIC,QAAQ,CAACC,cAAc,CAACN,KAAK,CAACO,EAAE,GAAG,MAAM,CAAC,EAAE;IAC5C;IACAF,QAAQ,CAACC,cAAc,CAACN,KAAK,CAACO,EAAE,GAAG,MAAM,CAAC,CAACC,WAAW,GAAGC,aAAa;EAC1E,CAAC,MAAM;IACH;IACA,IAAGT,KAAK,CAACO,EAAE,EAAC;MACRG,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGX,KAAK,CAACO,EAAE,CAAC;IAC/C,CAAC,MAAI;MACDG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C;IACAX,KAAK,CAACQ,WAAW,GAAGC,aAAa;EACrC;EAEA,SAASA,aAAa,CAACG,CAAC,EAAC;IACrBA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAK,CAAC,CAAC;IACvBF,CAAC,CAACG,cAAc,EAAE,CAAC,CAAC;;IAEpB;IACAb,EAAE,GAAGU,CAAC,CAACI,OAAO;IACdZ,EAAE,GAAGQ,CAAC,CAACK,OAAO;IAEdZ,QAAQ,CAACa,SAAS,GAAGC,gBAAgB,CAAC,CAAC;IACvCd,QAAQ,CAACe,WAAW,GAAGC,WAAW,CAAC,CAAC;;IAEpC;IACArB,KAAK,CAACsB,KAAK,CAACC,MAAM,GAAG,yCAAyC;EAClE;EAEA,SAASF,WAAW,CAACT,CAAC,EAAC;IACnBA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAK,CAAC,CAAC;IACvBF,CAAC,CAACG,cAAc,EAAE;;IAElB;;IAEAd,EAAE,GAAGC,EAAE,GAAGU,CAAC,CAACI,OAAO;IACnBb,EAAE,GAAGC,EAAE,GAAGQ,CAAC,CAACK,OAAO;IAEnBf,EAAE,GAAGU,CAAC,CAACI,OAAO;IACdZ,EAAE,GAAGQ,CAAC,CAACK,OAAO;;IAEd;IACAjB,KAAK,CAACsB,KAAK,CAACE,GAAG,GAAIxB,KAAK,CAACyB,SAAS,GAAGtB,EAAE,GAAI,IAAI;IAC/CH,KAAK,CAACsB,KAAK,CAACI,IAAI,GAAI1B,KAAK,CAAC2B,UAAU,GAAG1B,EAAE,GAAI,IAAI;EAErD;EAEA,SAASkB,gBAAgB,GAAG;IACxB;IACAd,QAAQ,CAACa,SAAS,GAAG,IAAI;IACzBb,QAAQ,CAACe,WAAW,GAAG,IAAI;;IAE3B;IACApB,KAAK,CAACsB,KAAK,CAACC,MAAM,GAAG,8CAA8C;EACvE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}